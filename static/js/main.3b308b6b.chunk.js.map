{"version":3,"sources":["heart-black.svg","avatars/avatar_dog.jpg","avatars/avatar_lenny.png","avatars/avatar_boy.jpg","components/ModalDetector.js","components/Modal.js","utilities.js","components/Timer.js","components/GameOverMessages.js","components/Comment.js","components/Post.js","components/AvatarSelection.js","components/FunpageBar.js","components/JokeOptions.js","App.js","serviceWorker.js","index.js","avatars/avatar_medieval.jpg"],"names":["module","exports","__webpack_require__","p","ModalOpenContext","React","createContext","ModalDetector","props","_useState","useState","_useState2","Object","slicedToArray","modalOpen","setModalOpen","react_default","a","createElement","Provider","value","open","children","Modal","ModalBody","modalState","setModalState","hideModal","e","arguments","length","undefined","type","keyCode","useContext","useEffect","document","addEventListener","removeEventListener","Fragment","CSSTransition","in","unmountOnExit","timeout","classNames","onClick","className","onExited","setHideState","assign","formatDate","time","Math","floor","giveRandom","min","max","random","capFirstLetter","string","charAt","toUpperCase","slice","TimeContext","progress","Timer","gameStarted","interval","setInterval","setProgress","clearInterval","WinMessageWithModal","WinMessage","LoseMessageWithModal","followers","LoseMessage","followersAtLose","setFollowersAtLose","GameOverMessage","_useState3","_useState4","progressAtWin","setProgressAtWin","substring","modal","useRef","current","focus","ref","tabIndex","ContactInfo","href","Comment","comment","setComment","Date","now","creationTime","setCreationTime","_useState5","_useState6","commentText","setCommentText","order","setTimeout","isRight","commentsTexts","goodComments","badComments","randomUsers","setRandomUsers","setCommentsCount","objectSpread","commentsCount","defineProperty","id","key","name","first","last","alt","src","picture","thumbnail","HeartsCounter","hearts","setHearts","build_default","duration","easingFn","t","b","c","d","cos","PI","end","CommentCounter","Hashtags","hashtags","setHashtags","twoLongestWords","text","match","sort","map","word","toLowerCase","join","ShowDate","datePublished","AvatarSelection","loadingImage","setLoadingImage","chooseAvatar","av","setAvatar","avatarMedieval","avatar","avatarBoy","avatarDog","avatarLenny","accept","onChange","file","reader","FileReader","onload","result","readAsDataURL","showImage","target","files","htmlFor","AvatarSelectionWithModal","FunpageBar","onKeyDown","setShowAvatarModal","TrendingStatus","history","start","heartIcon","desc","class","status","setStatus","balance","reduce","acc","val","_i","_statusTable","Infinity","emoji","range","JokeOptions","jokesList","setJokes","chosenJoke","setChosenJoke","ready","setReady","_useState7","_useState8","renderedAt","setRenderedAt","_useState9","_useState10","transitionTime","setTransitionTime","setJokesList","elems","elemsLeft","colWidth","querySelector","getBoundingClientRect","width","counter","newOrder","_loop","newLine","createLine","allElems","combined","posWidths","combinations","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","otherEl","indexOf","newComb","concat","toConsumableArray","newWidth","currEl","results","push","err","return","offsetWidth","apply","_loop2","i","filter","item","jokesMasonry","Array","from","querySelectorAll","postID","setup","joke","Punchline","punchline","disabled","num","timePassed","adjustFollowers","newPost","title","date","addPost","postsList","window","scrollTo","top","left","behavior","setPostID","choosePunchline","btnClass","Feed","fetchingUsers","setFetchingUsers","_useState11","_useState12","_useState13","_useState14","setFollowers","_useState15","_useState16","setHistory","_useState17","_useState18","startGame","_useState19","_useState20","_useState21","_useState22","fetchingJokes","setFetchingJokes","_useState23","_useState24","_useState25","_useState26","showAvatarModal","_useState27","_useState28","notFinished","setNotFinished","fetchJokes","Promise","resolve","reject","fetch","headers","Accept","then","res","json","createJokesList","catch","components_AvatarSelection","WelcomeMessage","InstructionsOnEmpty","TransitionGroup","component","post","newFollowers","round","splice","jokes","jokeSplit","array","temporaryValue","randomIndex","currentIndex","shuffle","App","Boolean","location","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.3b308b6b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/heart-black.56abafb1.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar_dog.e79ac75a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/avatar_lenny.b80ddd8a.png\";","module.exports = __webpack_public_path__ + \"static/media/avatar_boy.9f9cbc03.jpg\";","import React, {  useState } from 'react';\r\n\r\nconst ModalOpenContext = React.createContext({});\r\n\r\nfunction ModalDetector(props) {\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n\r\n\r\n    return (\r\n        <ModalOpenContext.Provider value={{ open: modalOpen, setModalOpen: setModalOpen }}>\r\n            {props.children}\r\n        </ModalOpenContext.Provider>\r\n    )\r\n}\r\n\r\nexport { ModalOpenContext, ModalDetector };","import React, { useState, useEffect, useContext } from 'react';\r\nimport { ModalOpenContext } from \"./ModalDetector\"\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nfunction Modal(ModalBody, props) {\r\n\r\n    const [modalState, setModalState] = useState(false);\r\n    useContext(ModalOpenContext).setModalOpen(modalState);\r\n\r\n    function hideModal(e = false) {\r\n        if (e.type !== \"keydown\" || e.keyCode === 27) {\r\n            setModalState(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setModalState(true);\r\n        document.addEventListener(\"keydown\", hideModal, false);\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", hideModal, false)\r\n        };\r\n    }, []);\r\n\r\n    function answerAfterExit() {\r\n        if (\"setHideState\" in props) {\r\n            props.setHideState(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CSSTransition in={modalState} unmountOnExit timeout={300} classNames={\"modal__background-\"}>\r\n                <div onClick={hideModal} className=\"modal__background\"></div>\r\n            </CSSTransition>\r\n            <CSSTransition in={modalState} onExited={answerAfterExit} unmountOnExit timeout={300} classNames={\"modal-\"}>\r\n                <ModalBody setModalState={setModalState} {...props} />\r\n            </CSSTransition >\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Modal;","export function formatDate(time) {\r\n  if (time === 0) {\r\n    return \"Just now\";\r\n  } else if (time === 1) {\r\n    return \"1 hour ago\";\r\n  } else if (time < 24) {\r\n    return time + \" hours ago\";\r\n  } else if (time >= 24 && time < 48) {\r\n    return \"1 day ago\";\r\n  } else {\r\n    return Math.floor(time / 24) + \" days ago\";\r\n  }\r\n}\r\n\r\nexport function giveRandom(min, max) {\r\n  return Math.floor(Math.random() * (max - min)) + min;\r\n}\r\n\r\nexport function capFirstLetter(string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport function shuffle(array) {\r\n  var currentIndex = array.length, temporaryValue, randomIndex;\r\n  while (0 !== currentIndex) {\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex -= 1;\r\n    temporaryValue = array[currentIndex];\r\n    array[currentIndex] = array[randomIndex];\r\n    array[randomIndex] = temporaryValue;\r\n  }\r\n  return array;\r\n}","import React, { useEffect } from 'react';\r\n\r\nconst TimeContext = React.createContext({ progress: 0 });\r\n\r\nfunction Timer(props) {\r\n    useEffect(() => {\r\n        if (props.gameStarted) {\r\n            const interval = setInterval(() => {\r\n                props.setProgress(progress => progress + 1);\r\n            }, 1000);\r\n            return () => {\r\n                clearInterval(interval);\r\n            };\r\n        }\r\n    }, [props.gameStarted]);\r\n\r\n    return (\r\n        <TimeContext.Provider value={{ progress: props.progress }}>\r\n            {props.children}\r\n        </TimeContext.Provider>\r\n    )\r\n}\r\n\r\nexport { TimeContext, Timer };","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport Modal from \"./Modal\";\r\nimport { formatDate } from \"../utilities\";\r\nimport { TimeContext } from \"./Timer\"\r\n\r\nfunction WinMessageWithModal(props) {\r\n    if (useContext(TimeContext).progress <= 168) {\r\n        return Modal(WinMessage, props)\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction LoseMessageWithModal(props) {\r\n    if (props.followers < 1000) {\r\n        return Modal(LoseMessage, props);\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction LoseMessage(props) {\r\n    const [followersAtLose, setFollowersAtLose] = useState(0);\r\n    useEffect(() => {\r\n        setFollowersAtLose(props.followers);\r\n    }, []);\r\n    return (\r\n        <GameOverMessage setModalState={props.setModalState}>\r\n            <h2 className=\"game-over-message__heading\">Oh no, it's been a week already and you lack <span className=\"game-over-message__important\">{1000 - followersAtLose} followers</span>!</h2>\r\n            <p className=\"game-over-message__text\">You didn't meet the requirements, but feel free to keep improving your joking skills here. We leave the funpage to you.</p>\r\n        </GameOverMessage>\r\n    )\r\n}\r\n\r\nfunction WinMessage(props) {\r\n    const progress = useContext(TimeContext).progress\r\n    const [progressAtWin, setProgressAtWin] = useState(0);\r\n    useEffect(() => {\r\n        setProgressAtWin(progress);\r\n    }, []);\r\n    return (\r\n        <GameOverMessage setModalState={props.setModalState}>\r\n            <h2 className=\"game-over-message__heading\">Whoa, you've reached the goal in <span className=\"game-over-message__important\">{formatDate(progressAtWin).substring(0, formatDate(progressAtWin).length - 4)}</span>!</h2>\r\n            <p className=\"game-over-message__text\">Congratulations, you've assured us that we leave the funpage in good hands. It's all yours – you're the perfect admin we were looking for.</p>\r\n        </GameOverMessage>\r\n    )\r\n}\r\n\r\nfunction GameOverMessage(props) {\r\n\r\n    const modal = useRef(null);\r\n    useEffect(() => {\r\n        modal.current.focus();\r\n    }, []);\r\n\r\n    return (\r\n        <section ref={modal} tabIndex={-1} className=\"game-over-message\">\r\n            {props.children}\r\n            <p className=\"game-over-message__text\">Thank you for playing!</p>\r\n            <ContactInfo />\r\n            <button className=\"game-over-message__close-button\" onClick={() => props.setModalState(false)}>Close</button>\r\n        </section>\r\n    )\r\n}\r\n\r\nfunction ContactInfo() {\r\n    return (\r\n        <>\r\n            <p className=\"game-over-message__contact-text\">If you would like to take a look into this project's code – the github is <a href=\"https://github.com/Sentkowski/Admin-Jokes\">here</a>. Code review is more than welcome.</p>\r\n            <p className=\"game-over-message__contact-text\">In case you would like to reach out to me to share your thoughts, mail me at <a href=\"mailto:szymon.sew.sentkowski@gmail.com\">szymon.sew.sentkowski@gmail.com</a></p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport { WinMessageWithModal, LoseMessageWithModal };","import React, { useState, useEffect } from 'react';\r\nimport { giveRandom, capFirstLetter } from \"../utilities.js\";\r\nimport commentsTexts from '../comments.json';\r\n\r\nexport default function Comment(props) {\r\n    const [comment, setComment] = useState(false);\r\n    const [creationTime, setCreationTime] = useState(Date.now());\r\n    const [commentText, setCommentText] = useState(\"\");\r\n    useEffect(() => {\r\n        if (props.order === 2 && Math.random() > 0.5) {\r\n            return undefined;\r\n        }\r\n        setCreationTime(Date.now());\r\n        setTimeout(() => {\r\n            setCommentText((props.isRight) ? commentsTexts.goodComments[giveRandom(0, commentsTexts.goodComments.length)] : commentsTexts.badComments[giveRandom(0, commentsTexts.badComments.length)]);\r\n            setComment(props.randomUsers[props.order - 1]);\r\n            props.setRandomUsers(props.randomUsers.slice(props.order));\r\n            props.setCommentsCount({ ...props.commentsCount, [props.id]: props.order });\r\n        }, Math.max(creationTime + 1000 + props.order * 500 - Date.now(), 0))\r\n    }, []);\r\n    return (!comment) ? (null) : (\r\n        <>\r\n            <li className=\"comment\" key={comment.name.first + comment.name.last}>\r\n                <img className=\"comment__photo\" alt=\"Commenter's avatar.\" src={comment.picture.thumbnail} />\r\n                <div className='comment__texts-container'>\r\n                    <p className=\"comment__text\">{commentText}</p>\r\n                    <p className=\"comment__name\">{capFirstLetter(comment.name.first)} {capFirstLetter(comment.name.last)}</p>\r\n                </div>\r\n            </li>\r\n        </>\r\n    )\r\n}","import React, { useState, useEffect, useContext } from 'react';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport CountUp from 'react-countup';\r\nimport Comment from \"./Comment\";\r\nimport { giveRandom, formatDate } from \"../utilities.js\";\r\nimport heartIcon from '../heart-black.svg';\r\nimport { TimeContext } from \"./Timer\"\r\n\r\nexport default function Post(props) {\r\n    return (\r\n        <CSSTransition key={props.title} in={true} timeout={400} classNames=\"post\">\r\n            <li className='post' key={props.title}>\r\n                <div className=\"post__container\">\r\n                    <header className=\"post__header\">\r\n                        <img onClick={() => props.setShowAvatarModal(true)} src={props.avatar} className='post__avatar' alt=\"Admin's page avatar.\" />\r\n                        <h2 className='post__title'>{props.title}</h2>\r\n                        <Hashtags text={props.text} />\r\n                    </header>\r\n                    <p className='post__text'>{props.text}</p>\r\n                    <ShowDate />\r\n                    <div className=\"post__reactions\">\r\n                        <HeartsCounter isRight={props.isRight} />\r\n                        <img src={heartIcon} className='post__heart-icon' alt=\"Icon of a heart.\" />\r\n                        <CommentCounter commentsCount={props.commentsCount} id={props.id} />\r\n                    </div>\r\n                </div>\r\n                <TransitionGroup className=\"post__comments-list\" component='ul'>\r\n                    <Comment id={props.id} isRight={props.isRight} randomUsers={props.randomUsers} setRandomUsers={props.setRandomUsers} commentsCount={props.commentsCount} setCommentsCount={props.setCommentsCount} order={1} />\r\n                    <Comment id={props.id} isRight={props.isRight} randomUsers={props.randomUsers} setRandomUsers={props.setRandomUsers} commentsCount={props.commentsCount} setCommentsCount={props.setCommentsCount} order={2} />\r\n                </TransitionGroup>\r\n            </li>\r\n        </CSSTransition>\r\n    )\r\n}\r\n\r\nfunction HeartsCounter(props) {\r\n    const [hearts, setHearts] = useState(0);\r\n    useEffect(() => {\r\n        setHearts((props.isRight) ? giveRandom(15, 50) : giveRandom(0, 7));\r\n    }, [props.isRight]);\r\n    return (\r\n        <p className=\"post__hearts-counter\"><CountUp duration={3} easingFn={function (t, b, c, d) {\r\n            return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\r\n        }} end={hearts} /></p>\r\n    )\r\n}\r\n\r\nfunction CommentCounter(props) {\r\n    if (props.id in props.commentsCount && props.commentsCount[props.id] > 1) {\r\n        return <p className=\"post__comments-counter\">{props.commentsCount[props.id]} comments</p>\r\n    } else if (props.id in props.commentsCount) {\r\n        return <p className=\"post__comments-counter\">{props.commentsCount[props.id]} comment</p>\r\n    } else {\r\n        return <p className=\"post__comments-counter\">no comments</p>\r\n    }\r\n}\r\n\r\nfunction Hashtags(props) {\r\n    const [hashtags, setHashtags] = useState([]);\r\n    useEffect(() => {\r\n        const twoLongestWords = props.text.match(/\\w+/g).sort((a, b) => b.length - a.length).slice(0, 2);\r\n        setHashtags(twoLongestWords.map(word => \"#\" + word.toLowerCase()).join(\" \"));\r\n    }, [props.text]);\r\n    return (\r\n        <p className=\"post__hashtags\">{hashtags}</p>\r\n    )\r\n}\r\n\r\nfunction ShowDate() {\r\n    const [datePublished, setDatePublished] = useState(useContext(TimeContext).progress);\r\n    const time = useContext(TimeContext).progress - datePublished;\r\n    return (\r\n        <p className='post__date'>{formatDate(time)}</p>\r\n    )\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\nimport avatarMedieval from '../avatars/avatar_medieval.jpg';\r\nimport avatarDog from '../avatars/avatar_dog.jpg';\r\nimport avatarLenny from '../avatars/avatar_lenny.png';\r\nimport avatarBoy from '../avatars/avatar_boy.jpg';\r\nimport Modal from \"./Modal\";\r\n\r\nfunction AvatarSelection(props) {\r\n    const [loadingImage, setLoadingImage] = useState(false);\r\n\r\n    function showImage(file) {\r\n        setLoadingImage(true);\r\n        let reader = new FileReader();\r\n        reader.onload = function () {\r\n            setLoadingImage(false);\r\n            props.setAvatar(reader.result);\r\n            props.setModalState(false);\r\n        };\r\n        reader.readAsDataURL(file);\r\n    }\r\n\r\n    function chooseAvatar(av) {\r\n        props.setAvatar(av);\r\n        props.setModalState(false);\r\n    }\r\n\r\n    const modal = useRef(null);\r\n    useEffect(() => {\r\n        modal.current.focus();\r\n    }, []);\r\n\r\n    return (\r\n        <section ref={modal} tabIndex={-1} className=\"avatar-modal\">\r\n            <h2 className=\"avatar-modal__heading\" >Pick your new avatar!</h2>\r\n            <ul className=\"avatar-modal__avatars-list\">\r\n                <li className=\"avatar-modal__avatar\">\r\n                    <img className=\"avatar-modal__image\" src={avatarMedieval} />\r\n                    {(props.avatar === avatarMedieval)\r\n                        ? <button className=\"avatar-modal__choose-button avatar-modal__choose-button--chosen\">Chosen</button>\r\n                        : <button onClick={() => chooseAvatar(avatarMedieval)} className=\"avatar-modal__choose-button\">Choose</button>}\r\n                </li>\r\n                <li className=\"avatar-modal__avatar\">\r\n                    <img className=\"avatar-modal__image\" src={avatarBoy} />\r\n                    {(props.avatar === avatarBoy)\r\n                        ? <button className=\"avatar-modal__choose-button avatar-modal__choose-button--chosen\">Chosen</button>\r\n                        : <button onClick={() => chooseAvatar(avatarBoy)} className=\"avatar-modal__choose-button\">Choose</button>}\r\n                </li>\r\n                <li className=\"avatar-modal__avatar\">\r\n                    <img className=\"avatar-modal__image\" src={avatarDog} />\r\n                    {(props.avatar === avatarDog)\r\n                        ? <button className=\"avatar-modal__choose-button avatar-modal__choose-button--chosen\">Chosen</button>\r\n                        : <button onClick={() => chooseAvatar(avatarDog)} className=\"avatar-modal__choose-button\">Choose</button>}\r\n                </li>\r\n                <li className=\"avatar-modal__avatar\">\r\n                    <img className=\"avatar-modal__image\" src={avatarLenny} />\r\n                    {(props.avatar === avatarLenny)\r\n                        ? <button className=\"avatar-modal__choose-button avatar-modal__choose-button--chosen\">Chosen</button>\r\n                        : <button onClick={() => chooseAvatar(avatarLenny)} className=\"avatar-modal__choose-button\">Choose</button>}\r\n                </li>\r\n                <li className=\"avatar-modal__avatar\">\r\n                    <input id=\"file\" className=\"avatar-modal__file-input\" type=\"file\" accept=\"image/*\" onChange={(e) => showImage(e.target.files[0])} />\r\n                    <label htmlFor=\"file\" className=\"avatar-modal__file-input-label\">{(loadingImage) ? \"Loading...\" : \"Choose from drive\"}</label>\r\n                    <small className=\"avatar-modal__file-input-note\">Don't worry, your picture will be seen only by hundreds of completely fake users.</small>\r\n                </li>\r\n            </ul>\r\n        </section>\r\n    )\r\n}\r\n\r\nfunction AvatarSelectionWithModal(props) {\r\n    return Modal(AvatarSelection, props)\r\n}\r\n\r\nexport default AvatarSelectionWithModal;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport CountUp from 'react-countup';\r\nimport heartIcon from '../heart-black.svg';\r\nimport { TimeContext } from \"./Timer\"\r\nimport { ModalOpenContext } from \"./ModalDetector\";\r\n\r\n\r\nexport default function FunpageBar(props) {\r\n  return (\r\n    <header className=\"funpage-bar\">\r\n      <img tabIndex={!useContext(ModalOpenContext).open ? 0 : -1}\r\n           onKeyDown={(e) => { if (e.keyCode === 13) { props.setShowAvatarModal(true) } }}\r\n           onClick={() => props.setShowAvatarModal(true)} src={props.avatar}\r\n           className=\"funpage-bar__avatar\" alt=\"Admin's page avatar.\" />\r\n      <div className=\"funpage-bar__texts-container\">\r\n        <h1 className=\"funpage-bar__name\">The funniest Funpage</h1>\r\n        <div className=\"funpage-bar__bottom-container\">\r\n          <p className=\"funpage-bar__admin-note\">Hello, Admin</p>\r\n          <TrendingStatus history={props.history} />\r\n          <p className=\"funpage-bar__followers-number\">{props.gameStarted ? <CountUp duration={3} start={(props.followers >= 0) ? props.followers - props.history[4] : 0} end={props.followers} /> : props.followers}</p>\r\n          <img src={heartIcon} className=\"funpage-bar__followers-icon\" alt=\"Icon of a heart.\" />\r\n        </div>\r\n      </div>\r\n      <progress className=\"funpage-bar__time-progress\" value={168 - useContext(TimeContext).progress} max=\"168\"></progress>\r\n    </header>\r\n  )\r\n}\r\n\r\n\r\nfunction TrendingStatus(props) {\r\n  const [status, setStatus] = useState({\r\n    min: 101,\r\n    max: 300,\r\n    desc: \"Trending!\",\r\n    class: 'funpage-bar__trending-note--good',\r\n  });\r\n  useEffect(() => {\r\n    const balance = props.history.reduce((acc, val) => acc + val);\r\n    const statusTable = [\r\n      {\r\n        min: -Infinity,\r\n        max: -250,\r\n        desc: \"Going down!\",\r\n        class: 'very-bad',\r\n        emoji: \"😖\",\r\n      },\r\n      {\r\n        min: -249,\r\n        max: -100,\r\n        desc: \"Losing followers\",\r\n        class: 'bad',\r\n        emoji: \"😧\",\r\n      },\r\n      {\r\n        min: -99,\r\n        max: 100,\r\n        desc: \"\",\r\n        class: 'neutral',\r\n        emoji: \"\",\r\n      },\r\n      {\r\n        min: 101,\r\n        max: 300,\r\n        desc: \"Trending!\",\r\n        class: 'good',\r\n        emoji: \"😂\",\r\n      },\r\n      {\r\n        min: 301,\r\n        max: Infinity,\r\n        desc: \"Going viral!\",\r\n        class: 'very-good',\r\n        emoji: \"🤣\",\r\n      },\r\n    ]\r\n    for (let range of statusTable) {\r\n      if (balance >= range.min && balance <= range.max) {\r\n        setStatus(range);\r\n      }\r\n    }\r\n  }, [props.history]);\r\n  return (\r\n    <>\r\n      <p className={\"funpage-bar__trending-note funpage-bar__trending-note--\" + status.class}>\r\n        <span className=\"funpage-bar__emoji\">{status.emoji}</span> {status.desc}\r\n      </p>\r\n    </>\r\n  )\r\n}","import React, { useState, useEffect, useContext } from 'react';\r\nimport { ModalOpenContext } from \"./ModalDetector\";\r\n\r\nexport default function JokeOptions(props) {\r\n    const [jokesList, setJokes] = useState([]);\r\n    const [chosenJoke, setChosenJoke] = useState(false);\r\n    const [ready, setReady] = useState(false);\r\n    const [renderedAt, setRenderedAt] = useState();\r\n    const [transitionTime, setTransitionTime] = useState(Date.now());\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setJokes(props.jokesList.slice(0, 5));\r\n            props.setJokesList(props.jokesList.slice(5));\r\n            setReady(true);\r\n            jokesMasonry(Array.from(document.querySelectorAll(\".new-post__punchline\")));\r\n            setRenderedAt(Date.now());\r\n        }, Math.max(transitionTime + 1000 - Date.now(), 0));\r\n    }, [props.postID]);\r\n\r\n    return (\r\n        <section tabIndex={!useContext(ModalOpenContext).open ? -1 : null} className={ready ? \"new-post\" : \"new-post new-post--hidden\"}>\r\n            {(jokesList.length > 1) &&\r\n                <>\r\n                    <p className=\"new-post__setup\">{jokesList[0].setup}</p>\r\n                    <ul className=\"new-post__punchlines-list\">\r\n                        {jokesList.map((joke, i) => <Punchline key={joke.punchline} order={i} chosenJoke={chosenJoke} setChosenJoke={setChosenJoke} punchline={joke.punchline}/>)}\r\n                    </ul>\r\n                </>\r\n            }\r\n            <button className=\"new-post__add-post-button\"\r\n                    disabled={chosenJoke === false}\r\n                    onClick={() => choosePunchline(chosenJoke)}\r\n                    tabIndex={!useContext(ModalOpenContext).open ? 0 : -1}>\r\n            +</button>\r\n        </section>\r\n    )\r\n\r\n    function choosePunchline(num) {\r\n        setChosenJoke(false);\r\n        const timePassed = Date.now() - renderedAt;\r\n        const isRight = (jokesList[0] === jokesList[num]);\r\n        props.adjustFollowers(isRight, timePassed);\r\n        const newPost = {\r\n            title: 'Joke #' + (props.postID + 1) + '!',\r\n            text: jokesList[0].setup + ' ' + jokesList[num].punchline,\r\n            date: 'Just now',\r\n            id: props.postID + 1,\r\n            isRight: isRight,\r\n        };\r\n        props.addPost([newPost, ...props.postsList]);\r\n        window.scrollTo({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: 'smooth'\r\n        });\r\n        setReady(false);\r\n        setTransitionTime(Date.now());\r\n        props.setPostID(props.postID + 1);\r\n    }\r\n\r\n    function jokesMasonry(elems) {\r\n        let elemsLeft = elems.slice(0)\r\n        const colWidth = document.querySelector(\".new-post__punchlines-list\").getBoundingClientRect().width;\r\n        let counter = 0;\r\n        let newOrder = [];\r\n        while (elemsLeft.length > 0) {\r\n            const newLine = createLine(elemsLeft, [], colWidth)[1];\r\n            for (let i = 0; i < newLine.length; i++ , counter++) {\r\n                newOrder.push(elems.indexOf(newLine[i]));\r\n                elemsLeft = elemsLeft.filter(item => item !== newLine[i]);\r\n            }\r\n        }\r\n        setJokes(newOrder.map(i => props.jokesList.slice(0, 5)[i]));\r\n        document.querySelector(\".new-post\").focus()\r\n    }\r\n}\r\n\r\nfunction createLine(allElems, combined, max) {\r\n    let posWidths = [];\r\n    let combinations = [];\r\n    for (let otherEl of allElems) {\r\n        if (combined.indexOf(otherEl) === -1) {\r\n            const newComb = [...combined, otherEl]\r\n            const newWidth = newComb.reduce((acc, currEl) => acc + currEl.getBoundingClientRect().width, 0);\r\n            if (newWidth <= max) {\r\n                const results = createLine(allElems, newComb, max);\r\n                posWidths.push(results[0]);\r\n                combinations.push(results[1]);\r\n            } else if (newWidth === max) {\r\n                return [newWidth, newComb];\r\n            }\r\n        }\r\n    }\r\n    if (combinations.length === 0) {\r\n        return [combined.reduce((acc, currEl) => acc + currEl.offsetWidth, 0), combined];\r\n    } else {\r\n        return [Math.max(...posWidths), combinations[posWidths.indexOf(Math.max(...posWidths))]];\r\n    }\r\n}\r\n\r\nfunction Punchline(props) {\r\n    const btnClass = \"new-post__punchlines-button\";\r\n    const chosenBtnClass = \"new-post__punchlines-button--chosen\";\r\n\r\n    return (\r\n        <li className=\"new-post__punchline\">\r\n            <button  tabIndex={!useContext(ModalOpenContext).open ? 0 : -1}\r\n                     className={props.chosenJoke === props.order ? btnClass + ' ' +  chosenBtnClass : btnClass}\r\n                     onClick={() => props.setChosenJoke(props.order)}>{props.punchline}\r\n            </button>\r\n        </li>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport './App.scss';\nimport avatarMedieval from './avatars/avatar_medieval.jpg';\nimport { WinMessageWithModal, LoseMessageWithModal } from \"./components/GameOverMessages\";\nimport Post from \"./components/Post\";\nimport AvatarSelectionWithModal from \"./components/AvatarSelection\";\nimport { Timer } from \"./components/Timer\";\nimport FunpageBar from \"./components/FunpageBar\";\nimport JokeOptions from \"./components/JokeOptions\";\nimport { ModalDetector } from \"./components/ModalDetector\";\nimport { shuffle, giveRandom } from \"./utilities.js\"\n\nfunction App() {\n  return (\n    <Feed />\n  );\n}\n\nfunction Feed() {\n  const [progress, setProgress] = useState(0);\n  const [randomUsers, setRandomUsers] = useState([]);\n  const [fetchingUsers, setFetchingUsers] = useState(false);\n  const [postID, setPostID] = useState(0);\n  const [postsList, addPost] = useState([]);\n  const [commentsCount, setCommentsCount] = useState({});\n  const [followers, setFollowers] = useState(0);\n  const [history, setHistory] = useState([0, 0, 0, 0, 0]);\n  const [gameStarted, startGame] = useState(false);\n  const [jokesList, setJokesList] = useState([]);\n  const [fetchingJokes, setFetchingJokes] = useState(false);\n  const [avatar, setAvatar] = useState(avatarMedieval);\n  const [showAvatarModal, setShowAvatarModal] = useState(false);\n  const [notFinished, setNotFinished] = useState(true);\n\n  useEffect(() => {\n    if (jokesList.length <= 10 && !fetchingJokes) {\n      setFetchingJokes(true);\n      fetchJokes()\n        .then(res => {\n          setJokesList([...jokesList, ...res]);\n          setFetchingJokes(false);\n        })\n        .catch(() => {\n          setJokesList([\n            {setup: \"Woops, looks like the API, I mean the creative process, failed this time. You can...\", punchline: \"Restart and hope for better luck.\"},\n            {setup: \"Woops, looks like the API, I mean the creative process, failed this time. You can...\", punchline: \"Blame the guy who made it.\"},\n            {setup: \"Woops, looks like the API, I mean the creative process, failed this time. You can...\", punchline: \"Let the guy who made it know that there is a problem! (recommended).\"},\n            {setup: \"Woops, looks like the API, I mean the creative process, failed this time. You can...\", punchline: \"Choose this option and try to get followers...\"},\n            {setup: \"Woops, looks like the API, I mean the creative process, failed this time. You can...\", punchline: \"Or choose this one. Each gives you 20% chance of being right!\"}\n          ]);\n          setFetchingJokes(false);\n        });\n    }\n  }, [jokesList]);\n\n  useEffect(() => {\n    if (randomUsers.length < 5 & !fetchingUsers) {\n      setFetchingUsers(true);\n      fetch(`https://randomuser.me/api/?inc=name,picture&nat=us,gb&results=30`)\n      .then(res => res.json())\n      .then(res => {\n        setRandomUsers([...randomUsers, ...res.results]);\n        setFetchingUsers(false);\n      })\n      .catch((e) => setFetchingUsers(false));\n    }\n  }, [randomUsers]);\n\n  return (\n    <main>\n      <ModalDetector>\n        <Timer gameStarted={gameStarted} progress={progress} setProgress={setProgress}>\n          {showAvatarModal && <AvatarSelectionWithModal setHideState={setShowAvatarModal} setAvatar={setAvatar} avatar={avatar}/>}\n          <FunpageBar avatar={avatar} setShowAvatarModal={setShowAvatarModal} followers={followers} gameStarted={gameStarted} history={history} />\n          {(notFinished && (progress > 168 ||  followers >= 1000 )) && (followers >= 1000 ? (\n            <WinMessageWithModal setHideState={setNotFinished} />\n          ) : (\n            <LoseMessageWithModal followers={followers} setHideState={setNotFinished} />))}\n          <CSSTransition in={!gameStarted} unmountOnExit timeout={200} classNames=\"welcome-message\">\n            <WelcomeMessage startGame={startGame} />\n          </CSSTransition>\n          {gameStarted && <>\n            {!postsList.length && <InstructionsOnEmpty />}\n            <TransitionGroup className=\"posts-list\" component='ul'>\n              {postsList.map(post => Post({...post, setCommentsCount, commentsCount, followers, randomUsers, setRandomUsers, avatar, setShowAvatarModal}))}\n            </TransitionGroup>\n            <JokeOptions jokesList={jokesList} setJokesList={setJokesList} postID={postID} setPostID={setPostID} postsList={postsList} addPost={addPost} adjustFollowers={adjustFollowers}/>\n          </> }\n        </Timer>\n      </ModalDetector>\n    </main>\n  );\n\n  function adjustFollowers(isRight, timePassed) {\n    let newFollowers = Math.max(Math.round(100 - 0.005 * timePassed), 10);\n    if (!isRight && newFollowers > followers) {\n      newFollowers = followers;\n    }\n    if (isRight) {\n      setFollowers(followers + newFollowers);\n      setHistory([...history, newFollowers].splice(1,5));\n    } else {\n      setFollowers(followers - newFollowers);\n      setHistory([...history, newFollowers * -1 ].splice(1,5));\n    }\n  }\n}\n\n\nfunction fetchJokes() {\n  return new Promise ((resolve, reject) => {\n    fetch(`https://icanhazdadjoke.com/search?page=${giveRandom(0, 10)}&limit=${giveRandom(40, 50)}`, {\n      headers: {\n        Accept: \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(res => {\n        if (!createJokesList(res.results)) {\n          resolve(fetchJokes());\n        } else {\n          resolve(createJokesList(res.results));\n        }\n      })\n      .catch(() => reject());\n  })\n}\n\nfunction createJokesList(json) {\n  let jokes = [];\n  for (let joke of json) {\n    let jokeSplit = joke.joke.match( /[^.!?]+[.!?]+/g );\n    if (jokeSplit && jokeSplit.length === 2) {\n      jokes.push({setup: jokeSplit[0], punchline: jokeSplit[1]});\n    }\n  }\n  jokes = jokes.slice(0, Math.floor(jokes.length / 5) * 5)\n  return (jokes.length >= 5) ? shuffle(jokes) : false;\n}\n\nfunction InstructionsOnEmpty() {\n  return (\n      <h2 className=\"instructions-message\">Choose the right punchline to get followers – be quick!</h2>\n  )\n}\n\nfunction WelcomeMessage(props) {\n  return (\n    <section className=\"welcome-message\">\n      <div className=\"welcome-message__container\">\n        <h2 className=\"welcome-message__heading\">Welcome!</h2>\n        <p className=\"welcome-message__text\">This is your kingdom, Admin. We've set things up for you, but if you wish, you can change this avatar – tap on it. 🎯</p>\n        <p className=\"welcome-message__text welcome-message__text--last\">Remember the deal, right?</p>\n      </div>\n      <ul className=\"welcome-message__conditions-list\">\n        <li className=\"welcome-message__condition\">\n          <p className=\"welcome-message__condition-text\">Get us to 1000 followers and you're hired.</p>\n        </li>\n        <li className=\"welcome-message__condition\">\n          <p className=\"welcome-message__condition-text\">Guess what happens if you leave us with&nbsp;0...</p>\n        </li>\n        <li className=\"welcome-message__condition\">\n          <p className=\"welcome-message__condition-text\">You have ONE week.</p>\n        </li>\n      </ul>\n      <ul></ul>\n      <button onClick={() => props.startGame(true)} className=\"welcome-message__start-button\">Let the joking begin</button>\n    </section>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/avatar_medieval.e3fbe543.jpg\";"],"sourceRoot":""}