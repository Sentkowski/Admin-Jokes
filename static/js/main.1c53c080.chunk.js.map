{"version":3,"sources":["heart-black.svg","avatars/avatar_dog.jpg","avatars/avatar_lenny.png","avatars/avatar_boy.jpg","components/ModalDetector.js","components/Modal.js","utilities.js","components/Timer.js","components/GameOverMessages.js","components/Comment.js","components/Post.js","components/AvatarSelection.js","components/FunpageBar.js","components/JokeOptions.js","App.js","serviceWorker.js","index.js","avatars/avatar_medieval.jpg"],"names":["module","exports","__webpack_require__","p","ModalOpenContext","React","createContext","ModalDetector","props","_useState","useState","_useState2","Object","slicedToArray","modalOpen","setModalOpen","react_default","a","createElement","Provider","value","open","children","Modal","ModalBody","modalState","setModalState","hideModal","e","arguments","length","undefined","type","keyCode","useContext","useEffect","document","addEventListener","removeEventListener","Fragment","CSSTransition","in","unmountOnExit","timeout","classNames","onClick","className","onExited","setHideState","assign","formatDate","time","Math","floor","giveRandom","min","max","random","capFirstLetter","string","charAt","toUpperCase","slice","shuffle","array","temporaryValue","randomIndex","currentIndex","TimeContext","progress","Timer","gameStarted","interval","setInterval","setProgress","clearInterval","WinMessageWithModal","WinMessage","LoseMessageWithModal","followers","LoseMessage","followersAtLose","setFollowersAtLose","GameOverMessage","_useState3","_useState4","progressAtWin","setProgressAtWin","substring","modal","useRef","current","focus","ref","tabIndex","ContactInfo","href","Comment","comment","setComment","Date","now","creationTime","setCreationTime","_useState5","_useState6","commentText","setCommentText","order","setTimeout","isRight","commentsTexts","goodComments","badComments","randomUsers","setRandomUsers","setCommentsCount","objectSpread","commentsCount","defineProperty","id","key","name","first","last","alt","src","picture","thumbnail","HeartsCounter","hearts","setHearts","build_default","duration","easingFn","t","b","c","d","cos","PI","end","CommentCounter","Hashtags","hashtags","setHashtags","twoLongestWords","text","match","sort","map","word","toLowerCase","join","ShowDate","datePublished","AvatarSelection","loadingImage","setLoadingImage","chooseAvatar","av","setAvatar","avatarMedieval","avatar","avatarBoy","avatarDog","avatarLenny","accept","onChange","file","reader","FileReader","onload","result","readAsDataURL","showImage","target","files","htmlFor","AvatarSelectionWithModal","FunpageBar","onKeyDown","setShowAvatarModal","TrendingStatus","history","start","heartIcon","desc","class","status","setStatus","balance","reduce","acc","val","_i","_statusTable","Infinity","emoji","range","JokeOptions","jokesList","setJokes","chosenJoke","setChosenJoke","ready","setReady","_useState7","_useState8","renderedAt","setRenderedAt","_useState9","_useState10","transitionTime","setTransitionTime","_useState11","_useState12","setup","setSetup","setJokesList","elems","elemsLeft","colWidth","querySelector","getBoundingClientRect","width","counter","newOrder","_loop","newLine","createLine","allElems","combined","posWidths","combinations","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","otherEl","indexOf","newComb","concat","toConsumableArray","newWidth","currEl","results","push","err","return","offsetWidth","apply","_loop2","i","filter","item","jokesMasonry","Array","from","querySelectorAll","postID","joke","Punchline","punchline","disabled","num","timePassed","adjustFollowers","newPost","title","date","addPost","postsList","window","scrollTo","top","left","behavior","setPostID","choosePunchline","btnClass","Feed","fetchingUsers","setFetchingUsers","_useState13","_useState14","setFollowers","_useState15","_useState16","setHistory","_useState17","_useState18","startGame","_useState19","_useState20","_useState21","_useState22","fetchingJokes","setFetchingJokes","_useState23","_useState24","_useState25","_useState26","showAvatarModal","_useState27","_useState28","notFinished","setNotFinished","_useState29","v","k","_useState30","jokesAPIPages","setJokesApiPages","fetchJokes","page","Promise","resolve","reject","fetch","headers","Accept","then","res","json","createJokesList","catch","pop","components_AvatarSelection","WelcomeMessage","InstructionsOnEmpty","TransitionGroup","component","post","newFollowers","round","splice","jokes","jokeSplit","App","Boolean","location","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.1c53c080.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/heart-black.56abafb1.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar_dog.e79ac75a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/avatar_lenny.b80ddd8a.png\";","module.exports = __webpack_public_path__ + \"static/media/avatar_boy.9f9cbc03.jpg\";","import React, {  useState } from 'react';\r\n\r\nconst ModalOpenContext = React.createContext({});\r\n\r\nfunction ModalDetector(props) {\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n\r\n\r\n    return (\r\n        <ModalOpenContext.Provider value={{ open: modalOpen, setModalOpen: setModalOpen }}>\r\n            {props.children}\r\n        </ModalOpenContext.Provider>\r\n    )\r\n}\r\n\r\nexport { ModalOpenContext, ModalDetector };","import React, { useState, useEffect, useContext } from 'react';\r\nimport { ModalOpenContext } from \"./ModalDetector\"\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nfunction Modal(ModalBody, props) {\r\n\r\n    const [modalState, setModalState] = useState(false);\r\n    useContext(ModalOpenContext).setModalOpen(modalState);\r\n\r\n    function hideModal(e = false) {\r\n        if (e.type !== \"keydown\" || e.keyCode === 27) {\r\n            setModalState(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setModalState(true);\r\n        document.addEventListener(\"keydown\", hideModal, false);\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", hideModal, false)\r\n        };\r\n    }, []);\r\n\r\n    function answerAfterExit() {\r\n        if (\"setHideState\" in props) {\r\n            props.setHideState(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CSSTransition in={modalState} unmountOnExit timeout={300} classNames={\"modal__background-\"}>\r\n                <div onClick={hideModal} className=\"modal__background\"></div>\r\n            </CSSTransition>\r\n            <CSSTransition in={modalState} onExited={answerAfterExit} unmountOnExit timeout={300} classNames={\"modal-\"}>\r\n                <ModalBody setModalState={setModalState} {...props} />\r\n            </CSSTransition >\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Modal;","export function formatDate(time) {\r\n  if (time === 0) {\r\n    return \"Just now\";\r\n  } else if (time === 1) {\r\n    return \"1 hour ago\";\r\n  } else if (time < 24) {\r\n    return time + \" hours ago\";\r\n  } else if (time >= 24 && time < 48) {\r\n    return \"1 day ago\";\r\n  } else {\r\n    return Math.floor(time / 24) + \" days ago\";\r\n  }\r\n}\r\n\r\nexport function giveRandom(min, max) {\r\n  return Math.floor(Math.random() * (max - min)) + min;\r\n}\r\n\r\nexport function capFirstLetter(string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport function shuffle(array) {\r\n  var currentIndex = array.length, temporaryValue, randomIndex;\r\n  while (0 !== currentIndex) {\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex -= 1;\r\n    temporaryValue = array[currentIndex];\r\n    array[currentIndex] = array[randomIndex];\r\n    array[randomIndex] = temporaryValue;\r\n  }\r\n  return array;\r\n}","import React, { useEffect } from 'react';\r\n\r\nconst TimeContext = React.createContext({ progress: 0 });\r\n\r\nfunction Timer(props) {\r\n    useEffect(() => {\r\n        if (props.gameStarted) {\r\n            const interval = setInterval(() => {\r\n                props.setProgress(progress => progress + 1);\r\n            }, 1000);\r\n            return () => {\r\n                clearInterval(interval);\r\n            };\r\n        }\r\n    }, [props.gameStarted]);\r\n\r\n    return (\r\n        <TimeContext.Provider value={{ progress: props.progress }}>\r\n            {props.children}\r\n        </TimeContext.Provider>\r\n    )\r\n}\r\n\r\nexport { TimeContext, Timer };","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport Modal from \"./Modal\";\r\nimport { formatDate } from \"../utilities\";\r\nimport { TimeContext } from \"./Timer\"\r\n\r\nfunction WinMessageWithModal(props) {\r\n    if (useContext(TimeContext).progress <= 168) {\r\n        return Modal(WinMessage, props)\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction LoseMessageWithModal(props) {\r\n    if (props.followers < 1000) {\r\n        return Modal(LoseMessage, props);\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction LoseMessage(props) {\r\n    const [followersAtLose, setFollowersAtLose] = useState(0);\r\n    useEffect(() => {\r\n        setFollowersAtLose(props.followers);\r\n    }, []);\r\n    return (\r\n        <GameOverMessage setModalState={props.setModalState}>\r\n            <h2 className=\"game-over-message__heading\">Oh no, it's been a week already and you lack <span className=\"game-over-message__important\">{1000 - followersAtLose} followers</span>!</h2>\r\n            <p className=\"game-over-message__text\">You didn't meet the requirements, but feel free to keep improving your joking skills here. We leave the funpage to you.</p>\r\n        </GameOverMessage>\r\n    )\r\n}\r\n\r\nfunction WinMessage(props) {\r\n    const progress = useContext(TimeContext).progress\r\n    const [progressAtWin, setProgressAtWin] = useState(0);\r\n    useEffect(() => {\r\n        setProgressAtWin(progress);\r\n    }, []);\r\n    return (\r\n        <GameOverMessage setModalState={props.setModalState}>\r\n            <h2 className=\"game-over-message__heading\">Whoa, you've reached the goal in <span className=\"game-over-message__important\">{formatDate(progressAtWin).substring(0, formatDate(progressAtWin).length - 4)}</span>!</h2>\r\n            <p className=\"game-over-message__text\">Congratulations, you've assured us that we leave the funpage in good hands. It's all yours – you're the perfect admin we were looking for.</p>\r\n        </GameOverMessage>\r\n    )\r\n}\r\n\r\nfunction GameOverMessage(props) {\r\n\r\n    const modal = useRef(null);\r\n    useEffect(() => {\r\n        modal.current.focus();\r\n    }, []);\r\n\r\n    return (\r\n        <section ref={modal} tabIndex={-1} className=\"game-over-message\">\r\n            {props.children}\r\n            <p className=\"game-over-message__text\">Thank you for playing!</p>\r\n            <ContactInfo />\r\n            <button className=\"game-over-message__close-button\" onClick={() => props.setModalState(false)}>Close</button>\r\n        </section>\r\n    )\r\n}\r\n\r\nfunction ContactInfo() {\r\n    return (\r\n        <>\r\n            <p className=\"game-over-message__contact-text\">If you would like to take a look into this project's code – the github is <a href=\"https://github.com/Sentkowski/Admin-Jokes\">here</a>. Code review is more than welcome.</p>\r\n            <p className=\"game-over-message__contact-text\">In case you would like to reach out to me to share your thoughts, mail me at <a href=\"mailto:szymon.sew.sentkowski@gmail.com\">szymon.sew.sentkowski@gmail.com</a></p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport { WinMessageWithModal, LoseMessageWithModal };","import React, { useState, useEffect } from 'react';\r\nimport { giveRandom, capFirstLetter } from \"../utilities.js\";\r\nimport commentsTexts from '../comments.json';\r\n\r\nexport default function Comment(props) {\r\n    const [comment, setComment] = useState(false);\r\n    const [creationTime, setCreationTime] = useState(Date.now());\r\n    const [commentText, setCommentText] = useState(\"\");\r\n    useEffect(() => {\r\n        if (props.order === 2 && Math.random() > 0.5) {\r\n            return undefined;\r\n        }\r\n        setCreationTime(Date.now());\r\n        setTimeout(() => {\r\n            setCommentText((props.isRight) ? commentsTexts.goodComments[giveRandom(0, commentsTexts.goodComments.length)] : commentsTexts.badComments[giveRandom(0, commentsTexts.badComments.length)]);\r\n            setComment(props.randomUsers[props.order - 1]);\r\n            props.setRandomUsers(props.randomUsers.slice(props.order));\r\n            props.setCommentsCount({ ...props.commentsCount, [props.id]: props.order });\r\n        }, Math.max(creationTime + 1000 + props.order * 500 - Date.now(), 0))\r\n    }, []);\r\n    return (!comment) ? (null) : (\r\n        <>\r\n            <li className=\"comment\" key={comment.name.first + comment.name.last}>\r\n                <img className=\"comment__photo\" alt=\"Commenter's avatar.\" src={comment.picture.thumbnail} />\r\n                <div className='comment__texts-container'>\r\n                    <p className=\"comment__text\">{commentText}</p>\r\n                    <p className=\"comment__name\">{capFirstLetter(comment.name.first)} {capFirstLetter(comment.name.last)}</p>\r\n                </div>\r\n            </li>\r\n        </>\r\n    )\r\n}","import React, { useState, useEffect, useContext } from 'react';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport CountUp from 'react-countup';\r\nimport Comment from \"./Comment\";\r\nimport { giveRandom, formatDate } from \"../utilities.js\";\r\nimport heartIcon from '../heart-black.svg';\r\nimport { TimeContext } from \"./Timer\"\r\n\r\nexport default function Post(props) {\r\n    return (\r\n        <CSSTransition key={props.title} in={true} timeout={400} classNames=\"post\">\r\n            <li className='post' key={props.title}>\r\n                <div className=\"post__container\">\r\n                    <header className=\"post__header\">\r\n                        <img onClick={() => props.setShowAvatarModal(true)} src={props.avatar} className='post__avatar' alt=\"Admin's page avatar.\" />\r\n                        <h2 className='post__title'>{props.title}</h2>\r\n                        <Hashtags text={props.text} />\r\n                    </header>\r\n                    <p className='post__text'>{props.text}</p>\r\n                    <ShowDate />\r\n                    <div className=\"post__reactions\">\r\n                        <HeartsCounter isRight={props.isRight} />\r\n                        <img src={heartIcon} className='post__heart-icon' alt=\"Icon of a heart.\" />\r\n                        <CommentCounter commentsCount={props.commentsCount} id={props.id} />\r\n                    </div>\r\n                </div>\r\n                <TransitionGroup className=\"post__comments-list\" component='ul'>\r\n                    <Comment id={props.id} isRight={props.isRight} randomUsers={props.randomUsers} setRandomUsers={props.setRandomUsers} commentsCount={props.commentsCount} setCommentsCount={props.setCommentsCount} order={1} />\r\n                    <Comment id={props.id} isRight={props.isRight} randomUsers={props.randomUsers} setRandomUsers={props.setRandomUsers} commentsCount={props.commentsCount} setCommentsCount={props.setCommentsCount} order={2} />\r\n                </TransitionGroup>\r\n            </li>\r\n        </CSSTransition>\r\n    )\r\n}\r\n\r\nfunction HeartsCounter(props) {\r\n    const [hearts, setHearts] = useState(0);\r\n    useEffect(() => {\r\n        setHearts((props.isRight) ? giveRandom(15, 50) : giveRandom(0, 7));\r\n    }, [props.isRight]);\r\n    return (\r\n        <p className=\"post__hearts-counter\"><CountUp duration={3} easingFn={function (t, b, c, d) {\r\n            return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\r\n        }} end={hearts} /></p>\r\n    )\r\n}\r\n\r\nfunction CommentCounter(props) {\r\n    if (props.id in props.commentsCount && props.commentsCount[props.id] > 1) {\r\n        return <p className=\"post__comments-counter\">{props.commentsCount[props.id]} comments</p>\r\n    } else if (props.id in props.commentsCount) {\r\n        return <p className=\"post__comments-counter\">{props.commentsCount[props.id]} comment</p>\r\n    } else {\r\n        return <p className=\"post__comments-counter\">no comments</p>\r\n    }\r\n}\r\n\r\nfunction Hashtags(props) {\r\n    const [hashtags, setHashtags] = useState([]);\r\n    useEffect(() => {\r\n        const twoLongestWords = props.text.match(/\\w+/g).sort((a, b) => b.length - a.length).slice(0, 2);\r\n        setHashtags(twoLongestWords.map(word => \"#\" + word.toLowerCase()).join(\" \"));\r\n    }, [props.text]);\r\n    return (\r\n        <p className=\"post__hashtags\">{hashtags}</p>\r\n    )\r\n}\r\n\r\nfunction ShowDate() {\r\n    const [datePublished, setDatePublished] = useState(useContext(TimeContext).progress);\r\n    const time = useContext(TimeContext).progress - datePublished;\r\n    return (\r\n        <p className='post__date'>{formatDate(time)}</p>\r\n    )\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\nimport avatarMedieval from '../avatars/avatar_medieval.jpg';\r\nimport avatarDog from '../avatars/avatar_dog.jpg';\r\nimport avatarLenny from '../avatars/avatar_lenny.png';\r\nimport avatarBoy from '../avatars/avatar_boy.jpg';\r\nimport Modal from \"./Modal\";\r\n\r\nfunction AvatarSelection(props) {\r\n    const [loadingImage, setLoadingImage] = useState(false);\r\n\r\n    function showImage(file) {\r\n        setLoadingImage(true);\r\n        let reader = new FileReader();\r\n        reader.onload = function () {\r\n            setLoadingImage(false);\r\n            props.setAvatar(reader.result);\r\n            props.setModalState(false);\r\n        };\r\n        reader.readAsDataURL(file);\r\n    }\r\n\r\n    function chooseAvatar(av) {\r\n        props.setAvatar(av);\r\n        props.setModalState(false);\r\n    }\r\n\r\n    const modal = useRef(null);\r\n    useEffect(() => {\r\n        modal.current.focus();\r\n    }, []);\r\n\r\n    return (\r\n        <section ref={modal} tabIndex={-1} className=\"avatar-modal\">\r\n            <h2 className=\"avatar-modal__heading\" >Pick your new avatar!</h2>\r\n            <ul className=\"avatar-modal__avatars-list\">\r\n                <li className=\"avatar-modal__avatar\">\r\n                    <img className=\"avatar-modal__image\" src={avatarMedieval} />\r\n                    {(props.avatar === avatarMedieval)\r\n                        ? <button className=\"avatar-modal__choose-button avatar-modal__choose-button--chosen\">Chosen</button>\r\n                        : <button onClick={() => chooseAvatar(avatarMedieval)} className=\"avatar-modal__choose-button\">Choose</button>}\r\n                </li>\r\n                <li className=\"avatar-modal__avatar\">\r\n                    <img className=\"avatar-modal__image\" src={avatarBoy} />\r\n                    {(props.avatar === avatarBoy)\r\n                        ? <button className=\"avatar-modal__choose-button avatar-modal__choose-button--chosen\">Chosen</button>\r\n                        : <button onClick={() => chooseAvatar(avatarBoy)} className=\"avatar-modal__choose-button\">Choose</button>}\r\n                </li>\r\n                <li className=\"avatar-modal__avatar\">\r\n                    <img className=\"avatar-modal__image\" src={avatarDog} />\r\n                    {(props.avatar === avatarDog)\r\n                        ? <button className=\"avatar-modal__choose-button avatar-modal__choose-button--chosen\">Chosen</button>\r\n                        : <button onClick={() => chooseAvatar(avatarDog)} className=\"avatar-modal__choose-button\">Choose</button>}\r\n                </li>\r\n                <li className=\"avatar-modal__avatar\">\r\n                    <img className=\"avatar-modal__image\" src={avatarLenny} />\r\n                    {(props.avatar === avatarLenny)\r\n                        ? <button className=\"avatar-modal__choose-button avatar-modal__choose-button--chosen\">Chosen</button>\r\n                        : <button onClick={() => chooseAvatar(avatarLenny)} className=\"avatar-modal__choose-button\">Choose</button>}\r\n                </li>\r\n                <li className=\"avatar-modal__avatar\">\r\n                    <input id=\"file\" className=\"avatar-modal__file-input\" type=\"file\" accept=\"image/*\" onChange={(e) => showImage(e.target.files[0])} />\r\n                    <label htmlFor=\"file\" className=\"avatar-modal__file-input-label\">{(loadingImage) ? \"Loading...\" : \"Choose from drive\"}</label>\r\n                    <small className=\"avatar-modal__file-input-note\">Don't worry, your picture will be seen only by hundreds of completely fake users.</small>\r\n                </li>\r\n            </ul>\r\n        </section>\r\n    )\r\n}\r\n\r\nfunction AvatarSelectionWithModal(props) {\r\n    return Modal(AvatarSelection, props)\r\n}\r\n\r\nexport default AvatarSelectionWithModal;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport CountUp from 'react-countup';\r\nimport heartIcon from '../heart-black.svg';\r\nimport { TimeContext } from \"./Timer\"\r\nimport { ModalOpenContext } from \"./ModalDetector\";\r\n\r\n\r\nexport default function FunpageBar(props) {\r\n  return (\r\n    <header className=\"funpage-bar\">\r\n      <img tabIndex={!useContext(ModalOpenContext).open ? 0 : -1}\r\n           onKeyDown={(e) => { if (e.keyCode === 13) { props.setShowAvatarModal(true) } }}\r\n           onClick={() => props.setShowAvatarModal(true)} src={props.avatar}\r\n           className=\"funpage-bar__avatar\" alt=\"Admin's page avatar.\" />\r\n      <div className=\"funpage-bar__texts-container\">\r\n        <h1 className=\"funpage-bar__name\">The funniest Funpage</h1>\r\n        <div className=\"funpage-bar__bottom-container\">\r\n          <p className=\"funpage-bar__admin-note\">Hello, Admin</p>\r\n          <TrendingStatus history={props.history} />\r\n          <p className=\"funpage-bar__followers-number\">{props.gameStarted ? <CountUp duration={3} start={(props.followers >= 0) ? props.followers - props.history[4] : 0} end={props.followers} /> : props.followers}</p>\r\n          <img src={heartIcon} className=\"funpage-bar__followers-icon\" alt=\"Icon of a heart.\" />\r\n        </div>\r\n      </div>\r\n      <progress className=\"funpage-bar__time-progress\" value={168 - useContext(TimeContext).progress} max=\"168\"></progress>\r\n    </header>\r\n  )\r\n}\r\n\r\n\r\nfunction TrendingStatus(props) {\r\n  const [status, setStatus] = useState({\r\n    min: 101,\r\n    max: 300,\r\n    desc: \"Trending!\",\r\n    class: 'funpage-bar__trending-note--good',\r\n  });\r\n  useEffect(() => {\r\n    const balance = props.history.reduce((acc, val) => acc + val);\r\n    const statusTable = [\r\n      {\r\n        min: -Infinity,\r\n        max: -250,\r\n        desc: \"Going down!\",\r\n        class: 'very-bad',\r\n        emoji: \"😖\",\r\n      },\r\n      {\r\n        min: -249,\r\n        max: -100,\r\n        desc: \"Losing followers\",\r\n        class: 'bad',\r\n        emoji: \"😧\",\r\n      },\r\n      {\r\n        min: -99,\r\n        max: 100,\r\n        desc: \"\",\r\n        class: 'neutral',\r\n        emoji: \"\",\r\n      },\r\n      {\r\n        min: 101,\r\n        max: 300,\r\n        desc: \"Trending!\",\r\n        class: 'good',\r\n        emoji: \"😂\",\r\n      },\r\n      {\r\n        min: 301,\r\n        max: Infinity,\r\n        desc: \"Going viral!\",\r\n        class: 'very-good',\r\n        emoji: \"🤣\",\r\n      },\r\n    ]\r\n    for (let range of statusTable) {\r\n      if (balance >= range.min && balance <= range.max) {\r\n        setStatus(range);\r\n      }\r\n    }\r\n  }, [props.history]);\r\n  return (\r\n    <>\r\n      <p className={\"funpage-bar__trending-note funpage-bar__trending-note--\" + status.class}>\r\n        <span className=\"funpage-bar__emoji\">{status.emoji}</span> {status.desc}\r\n      </p>\r\n    </>\r\n  )\r\n}","import React, { useState, useEffect, useContext } from 'react';\r\nimport { ModalOpenContext } from \"./ModalDetector\";\r\nimport { giveRandom } from \"../utilities.js\"\r\n\r\nexport default function JokeOptions(props) {\r\n    const [jokesList, setJokes] = useState([]);\r\n    const [chosenJoke, setChosenJoke] = useState(false);\r\n    const [ready, setReady] = useState(false);\r\n    const [renderedAt, setRenderedAt] = useState();\r\n    const [transitionTime, setTransitionTime] = useState(Date.now());\r\n    const [setup, setSetup] = useState(giveRandom(0, 5));\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setSetup(giveRandom(0, 5));\r\n            setJokes(props.jokesList.slice(0, 5));\r\n            props.setJokesList(props.jokesList.slice(5));\r\n            setReady(true);\r\n            jokesMasonry(Array.from(document.querySelectorAll(\".new-post__punchline\")));\r\n            setRenderedAt(Date.now());\r\n        }, Math.max(transitionTime + 1000 - Date.now(), 0));\r\n    }, [props.postID]);\r\n\r\n    return (\r\n        <section tabIndex={!useContext(ModalOpenContext).open ? -1 : null} className={ready ? \"new-post\" : \"new-post new-post--hidden\"}>\r\n            {(jokesList.length > 1) &&\r\n                <>\r\n                    <p className=\"new-post__setup\">{jokesList[setup].setup}</p>\r\n                    <ul className=\"new-post__punchlines-list\">\r\n                        {jokesList.map((joke, i) => <Punchline key={joke.punchline} order={i} chosenJoke={chosenJoke} setChosenJoke={setChosenJoke} punchline={joke.punchline}/>)}\r\n                    </ul>\r\n                </>\r\n            }\r\n            <button className=\"new-post__add-post-button\"\r\n                    disabled={chosenJoke === false}\r\n                    onClick={() => choosePunchline(chosenJoke)}\r\n                    tabIndex={!useContext(ModalOpenContext).open ? 0 : -1}>\r\n            +</button>\r\n        </section>\r\n    )\r\n\r\n    function choosePunchline(num) {\r\n        setChosenJoke(false);\r\n        const timePassed = Date.now() - renderedAt;\r\n        const isRight = (jokesList[setup] === jokesList[num]);\r\n        props.adjustFollowers(isRight, timePassed);\r\n        const newPost = {\r\n            title: 'Joke #' + (props.postID + 1) + '!',\r\n            text: jokesList[0].setup + ' ' + jokesList[num].punchline,\r\n            date: 'Just now',\r\n            id: props.postID + 1,\r\n            isRight: isRight,\r\n        };\r\n        props.addPost([newPost, ...props.postsList]);\r\n        window.scrollTo({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: 'smooth'\r\n        });\r\n        setReady(false);\r\n        setTransitionTime(Date.now());\r\n        props.setPostID(props.postID + 1);\r\n    }\r\n\r\n    function jokesMasonry(elems) {\r\n        let elemsLeft = elems.slice(0)\r\n        const colWidth = document.querySelector(\".new-post__punchlines-list\").getBoundingClientRect().width;\r\n        let counter = 0;\r\n        let newOrder = [];\r\n        while (elemsLeft.length > 0) {\r\n            const newLine = createLine(elemsLeft, [], colWidth)[1];\r\n            for (let i = 0; i < newLine.length; i++ , counter++) {\r\n                newOrder.push(elems.indexOf(newLine[i]));\r\n                elemsLeft = elemsLeft.filter(item => item !== newLine[i]);\r\n            }\r\n        }\r\n        setJokes(newOrder.map(i => props.jokesList.slice(0, 5)[i]));\r\n        document.querySelector(\".new-post\").focus()\r\n    }\r\n}\r\n\r\nfunction createLine(allElems, combined, max) {\r\n    let posWidths = [];\r\n    let combinations = [];\r\n    for (let otherEl of allElems) {\r\n        if (combined.indexOf(otherEl) === -1) {\r\n            const newComb = [...combined, otherEl]\r\n            const newWidth = newComb.reduce((acc, currEl) => acc + currEl.getBoundingClientRect().width, 0);\r\n            if (newWidth <= max) {\r\n                const results = createLine(allElems, newComb, max);\r\n                posWidths.push(results[0]);\r\n                combinations.push(results[1]);\r\n            } else if (newWidth === max) {\r\n                return [newWidth, newComb];\r\n            }\r\n        }\r\n    }\r\n    if (combinations.length === 0) {\r\n        return [combined.reduce((acc, currEl) => acc + currEl.offsetWidth, 0), combined];\r\n    } else {\r\n        return [Math.max(...posWidths), combinations[posWidths.indexOf(Math.max(...posWidths))]];\r\n    }\r\n}\r\n\r\nfunction Punchline(props) {\r\n    const btnClass = \"new-post__punchlines-button\";\r\n    const chosenBtnClass = \"new-post__punchlines-button--chosen\";\r\n\r\n    return (\r\n        <li className=\"new-post__punchline\">\r\n            <button  tabIndex={!useContext(ModalOpenContext).open ? 0 : -1}\r\n                     className={props.chosenJoke === props.order ? btnClass + ' ' +  chosenBtnClass : btnClass}\r\n                     onClick={() => props.setChosenJoke(props.order)}>{props.punchline}\r\n            </button>\r\n        </li>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport './App.scss';\nimport avatarMedieval from './avatars/avatar_medieval.jpg';\nimport { WinMessageWithModal, LoseMessageWithModal } from \"./components/GameOverMessages\";\nimport Post from \"./components/Post\";\nimport AvatarSelectionWithModal from \"./components/AvatarSelection\";\nimport { Timer } from \"./components/Timer\";\nimport FunpageBar from \"./components/FunpageBar\";\nimport JokeOptions from \"./components/JokeOptions\";\nimport { ModalDetector } from \"./components/ModalDetector\";\nimport { shuffle, giveRandom } from \"./utilities.js\"\n\nfunction App() {\n  return (\n    <Feed />\n  );\n}\n\nfunction Feed() {\n  const [progress, setProgress] = useState(0);\n  const [randomUsers, setRandomUsers] = useState([]);\n  const [fetchingUsers, setFetchingUsers] = useState(false);\n  const [postID, setPostID] = useState(0);\n  const [postsList, addPost] = useState([]);\n  const [commentsCount, setCommentsCount] = useState({});\n  const [followers, setFollowers] = useState(0);\n  const [history, setHistory] = useState([0, 0, 0, 0, 0]);\n  const [gameStarted, startGame] = useState(false);\n  const [jokesList, setJokesList] = useState([]);\n  const [fetchingJokes, setFetchingJokes] = useState(false);\n  const [avatar, setAvatar] = useState(avatarMedieval);\n  const [showAvatarModal, setShowAvatarModal] = useState(false);\n  const [notFinished, setNotFinished] = useState(true);\n  const [jokesAPIPages, setJokesApiPages] = useState([shuffle(Array.from({length: 10}, (v, k) => k+1))]);\n\n  useEffect(() => {\n    if (jokesAPIPages.length < 2) {\n      setJokesApiPages(shuffle(Array.from({length: 10}, (v, k) => k+1)));\n    }\n  })\n\n  useEffect(() => {\n    if (jokesList.length <= 10 && !fetchingJokes) {\n      setFetchingJokes(true);\n      fetchJokes(jokesAPIPages.pop())\n        .then(res => {\n          setJokesList([...jokesList, ...res]);\n          setFetchingJokes(false);\n        })\n        .catch(() => {\n          setJokesList([\n            {setup: \"Woops, looks like the API, I mean the creative process, failed this time. You can...\", punchline: \"Restart and hope for better luck.\"},\n            {setup: \"Woops, looks like the API, I mean the creative process, failed this time. You can...\", punchline: \"Blame the guy who made it.\"},\n            {setup: \"Woops, looks like the API, I mean the creative process, failed this time. You can...\", punchline: \"Let the guy who made it know that there is a problem! (recommended).\"},\n            {setup: \"Woops, looks like the API, I mean the creative process, failed this time. You can...\", punchline: \"Choose this option and try to get followers...\"},\n            {setup: \"Woops, looks like the API, I mean the creative process, failed this time. You can...\", punchline: \"Or choose this one. Each gives you 20% chance of being right!\"}\n          ]);\n          setFetchingJokes(false);\n        });\n    }\n  }, [jokesList]);\n\n  useEffect(() => {\n    if (randomUsers.length < 5 & !fetchingUsers) {\n      setFetchingUsers(true);\n      fetch(`https://randomuser.me/api/?inc=name,picture&nat=us,gb&results=30`)\n      .then(res => res.json())\n      .then(res => {\n        setRandomUsers([...randomUsers, ...res.results]);\n        setFetchingUsers(false);\n      })\n      .catch((e) => setFetchingUsers(false));\n    }\n  }, [randomUsers]);\n\n  return (\n    <main>\n      <ModalDetector>\n        <Timer gameStarted={gameStarted} progress={progress} setProgress={setProgress}>\n          {showAvatarModal && <AvatarSelectionWithModal setHideState={setShowAvatarModal} setAvatar={setAvatar} avatar={avatar}/>}\n          <FunpageBar avatar={avatar} setShowAvatarModal={setShowAvatarModal} followers={followers} gameStarted={gameStarted} history={history} />\n          {(notFinished && (progress > 168 ||  followers >= 1000 )) && (followers >= 1000 ? (\n            <WinMessageWithModal setHideState={setNotFinished} />\n          ) : (\n            <LoseMessageWithModal followers={followers} setHideState={setNotFinished} />))}\n          <CSSTransition in={!gameStarted} unmountOnExit timeout={200} classNames=\"welcome-message\">\n            <WelcomeMessage startGame={startGame} />\n          </CSSTransition>\n          {gameStarted && <>\n            {!postsList.length && <InstructionsOnEmpty />}\n            <TransitionGroup className=\"posts-list\" component='ul'>\n              {postsList.map(post => Post({...post, setCommentsCount, commentsCount, followers, randomUsers, setRandomUsers, avatar, setShowAvatarModal}))}\n            </TransitionGroup>\n            <JokeOptions jokesList={jokesList} setJokesList={setJokesList} postID={postID} setPostID={setPostID} postsList={postsList} addPost={addPost} adjustFollowers={adjustFollowers}/>\n          </> }\n        </Timer>\n      </ModalDetector>\n    </main>\n  );\n\n  function adjustFollowers(isRight, timePassed) {\n    let newFollowers = Math.max(Math.round(100 - 0.005 * timePassed), 10);\n    if (!isRight && newFollowers > followers) {\n      newFollowers = followers;\n    }\n    if (isRight) {\n      setFollowers(followers + newFollowers);\n      setHistory([...history, newFollowers].splice(1,5));\n    } else {\n      setFollowers(followers - newFollowers);\n      setHistory([...history, newFollowers * -1 ].splice(1,5));\n    }\n  }\n}\n\n\nfunction fetchJokes(page) {\n  return new Promise ((resolve, reject) => {\n    fetch(`https://icanhazdadjoke.com/search?page=${page}&limit=${giveRandom(40, 50)}`, {\n      headers: {\n        Accept: \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(res => {\n        if (!createJokesList(res.results)) {\n          resolve(fetchJokes());\n        } else {\n          resolve(createJokesList(res.results));\n        }\n      })\n      .catch(() => reject());\n  })\n}\n\nfunction createJokesList(json) {\n  let jokes = [];\n  for (let joke of json) {\n    let jokeSplit = joke.joke.match( /[^.!?]+[.!?]+/g );\n    if (jokeSplit && jokeSplit.length === 2) {\n      jokes.push({setup: jokeSplit[0], punchline: jokeSplit[1]});\n    }\n  }\n  jokes = jokes.slice(0, Math.floor(jokes.length / 5) * 5)\n  return (jokes.length >= 5) ? shuffle(jokes) : false;\n}\n\nfunction InstructionsOnEmpty() {\n  return (\n      <h2 className=\"instructions-message\">Choose the right punchline to get followers – be quick!</h2>\n  )\n}\n\nfunction WelcomeMessage(props) {\n  return (\n    <section className=\"welcome-message\">\n      <div className=\"welcome-message__container\">\n        <h2 className=\"welcome-message__heading\">Welcome!</h2>\n        <p className=\"welcome-message__text\">This is your kingdom, Admin. We've set things up for you, but if you wish, you can change this avatar – tap on it. 🎯</p>\n        <p className=\"welcome-message__text welcome-message__text--last\">Remember the deal, right?</p>\n      </div>\n      <ul className=\"welcome-message__conditions-list\">\n        <li className=\"welcome-message__condition\">\n          <p className=\"welcome-message__condition-text\">Get us to 1000 followers and you're hired.</p>\n        </li>\n        <li className=\"welcome-message__condition\">\n          <p className=\"welcome-message__condition-text\">Guess what happens if you leave us with&nbsp;0...</p>\n        </li>\n        <li className=\"welcome-message__condition\">\n          <p className=\"welcome-message__condition-text\">You have ONE week.</p>\n        </li>\n      </ul>\n      <ul></ul>\n      <button onClick={() => props.startGame(true)} className=\"welcome-message__start-button\">Let the joking begin</button>\n    </section>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/avatar_medieval.e3fbe543.jpg\";"],"sourceRoot":""}